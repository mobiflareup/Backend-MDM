function countChecked() { "all" === checkState && $(".bulk_action input[name='table_records']").iCheck("check"), "none" === checkState && $(".bulk_action input[name='table_records']").iCheck("uncheck"); var e = $(".bulk_action input[name='table_records']:checked").length; e ? ($(".column-title").hide(), $(".bulk-actions").show(), $(".action-cnt").html(e + " Records Selected")) : ($(".column-title").show(), $(".bulk-actions").hide()) } function getCustomFields(e) { if (e) var t = customFields.data[e]; else var t = customFields.data; return t } function replaceSpecialChar(e) { if (e) { var t = e.replace(/ /g, "_"); return t = t.replace(/^_+|_+$/g, ""), t = t.trim(), t = t.replace(/[^a-zA-Z0-9_+ ]/gi, ""), t = t.replace(/_+/g, "_"), t.toUpperCase() } } function getTableHeaders() { var e = customFields.xref; return e } function buildTripTypeSelect(e, t) { var a = customFields.TripTypes, n = "", d = a.length; for (t > 2 && (d -= 1), i = 0; i < d; i++) n += a[i][0] == e ? '<option value="' + a[i][0] + '" selected>' + a[i][1] + "</option>" : '<option value="' + a[i][0] + '">' + a[i][1] + "</option>"; return n } function buildRequestTypeSelect(e, t) { var a = customFields.RequestTypes, n = "", d = a.length; for (t > 2 && (d -= 1), i = 0; i < d; i++) n += a[i][0] == e ? '<option value="' + a[i][0] + '" selected>' + a[i][1] + "</option>" : '<option value="' + a[i][0] + '">' + a[i][1] + "</option>"; return n } function buildTable(e) { clearTable(e); var t = getCustomFields(), a = getTableHeaders(), i = "", n = ""; i += "<thead>\n<tr>"; for (key in a) customFields.admin || 1 != a[key][2] ? i += '<th width="' + a[key][1] + '">' + a[key][0] + "</th>" : delete a[key]; i += "</tr>\n</thead>", $(e).append(i), n += "<tbody>"; for (key in t) { n += '<tr data-id="' + key + '">'; var d = 0; for (subkey in t[key]) { switch (subkey) { case "TripType": var l = "", s = ""; $.each(customFields.TripTypes, function (e, a) { a[0] == t[key][subkey] && (l = customFields.TripTypes[e][1], s = customFields.TripTypes[e][0]) }), n += '<td><span class="field" data-field="' + subkey + '">' + l + '</span><select class="form-control input-sm" data-field="' + subkey + '" style="display:none;">'; var o = buildTripTypeSelect(t[key][subkey], key); n += o + "</select></td>"; break; case "RequestType": var c = "", r = ""; $.each(customFields.RequestTypes, function (e, a) { a[0] == t[key][subkey] && (c = customFields.RequestTypes[e][1], r = customFields.RequestTypes[e][0]) }), n += '<td><span class="field" data-field="' + subkey + '">' + c + '</span><select class="form-control input-sm" data-field="' + subkey + '" style="display:none;">'; var o = buildRequestTypeSelect(t[key][subkey], key); n += o + "</select></td>"; break; default: n += '<td><span class="field" data-field="' + subkey + '">' + t[key][subkey] + '</span><input type="text" class="form-control input-sm" data-field="' + subkey + '" value="' + t[key][subkey] + '" style="display:none;" /></td>' } d++ } customFields.admin && (n += '<td class="text-center"><button class="btn btn-xs btn-info" data-edit="' + key + '"><span class="fa fa-pencil"></span></button><button class="btn btn-xs btn-success" style="display:none;" data-save="' + key + '"><span class="fa fa-floppy-o"></span></button><button class="btn btn-xs btn-danger" style="display:none;" data-cancel="' + key + '"><span class="fa fa-ban"></span></button></td>'), n += "</tr>" } n += "</tbody>", $(e).append(n), initializeButtons() } function clearTable(e) { $(e).empty() } function resetForm(e) { var t = $(e + " tfoot tr").data("id"), a = parseInt(t) + 1; $(e + " tfoot tr").attr("data-id", a) } function updateFields(e, t) { var a = customFields.data[e].RequestNo, i = customFields.data[e].EmployeeName, n = customFields.data[e].PickupLocation, d = customFields.data[e].DropoffLocation, l = customFields.data[e].TripType, s = customFields.data[e].RequestType, o = customFields.data[e].PaymentStatus, c = customFields.data[e].CancelDate; if ("save" == t) { var a = $(target + ' tr[data-id="' + e + '"] input[data-field="RequestNo"]').val(), i = $(target + ' tr[data-id="' + e + '"] input[data-field="EmployeeName"]').val(), n = $(target + ' tr[data-id="' + e + '"] input[data-field="PickupLocation"]').val(), d = $(target + ' tr[data-id="' + e + '"] input[data-field="DropoffLocation"]').val(), l = $(target + ' tr[data-id="' + e + '"] select[data-field="TripType"] option:selected').val(), s = $(target + ' tr[data-id="' + e + '"] select[data-field="RequestType"] option:selected').val(), o = $(target + ' tr[data-id="' + e + '"] input[data-field="PaymentStatus"]').val(), c = $(target + ' tr[data-id="' + e + '"] input[data-field="CancelDate"]').val(); $(target + ' tr[data-id="' + e + '"] input[data-field="enabled"]').is(":checked") } "cancel" == t && ($(target + ' tr[data-id="' + e + '"] input[data-field="RequestNo"]').val(a), $(target + ' tr[data-id="' + e + '"] input[data-field="EmployeeName"]').val(i), $(target + ' tr[data-id="' + e + '"] input[data-field="PickupLocation"]').val(n), $(target + ' tr[data-id="' + e + '"] input[data-field="DropoffLocation"]').val(d), $(target + ' tr[data-id="' + e + '"] select[data-field="TripType"]').val(l), $(target + ' tr[data-id="' + e + '"] input[data-field="RequestType"]').val(s), $(target + ' tr[data-id="' + e + '"] input[data-field="PaymentStatus"]').val(o), $(target + ' tr[data-id="' + e + '"] input[data-field="CancelDate"]').val(c)); var r = {}; r.RequestNo = a, r.EmployeeName = i, r.PickupLocation = replaceSpecialChar(n), r.DropoffLocation = d, r.TripType = l, r.RequestType = s, r.PaymentStatus = o, r.CancelDate = c, customFields.data[e] = r, console.log(customFields.data[e]), $(target + ' tr[data-id="' + e + '"] .field[data-field="RequestNo"]').html(a), $(target + ' tr[data-id="' + e + '"] .field[data-field="EmployeeName"]').html(i), $(target + ' tr[data-id="' + e + '"] .field[data-field="PickupLocation"]').html(n), $(target + ' tr[data-id="' + e + '"] .field[data-field="DropoffLocation"]').html(d), $(target + ' tr[data-id="' + e + '"] .field[data-field="TripType"]').html(l), $(target + ' tr[data-id="' + e + '"] .field[data-field="RequestType"]').html(s), $(target + ' tr[data-id="' + e + '"] .field[data-field="PaymentStatus"]').html(o), $(target + ' tr[data-id="' + e + '"] .field[data-field="CancelDate"]').html(c) } function toggleRow(e) { console.log("row=" + e), $(target + ' tr[data-id="' + e + '"]').toggleClass("success"), $(target + ' tr[data-id="' + e + '"] td button[data-edit]').toggle(), $(target + ' tr[data-id="' + e + '"] td button[data-save]').toggle(), $(target + ' tr[data-id="' + e + '"] td button[data-cancel]').toggle(), $(target + ' tr[data-id="' + e + '"] td').children('input:not([type="checkbox"])').toggle(), $(target + ' tr[data-id="' + e + '"] td').children("select").toggle(), $(target + ' tr[data-id="' + e + '"] td').children("span.field").toggle() } function changeMode(e, t, a) { switch (a) { case "edit": toggleRow(e), $(target + ' tr[data-id="' + e + '"] td input[data-field="enabled"]').prop({ disabled: !1 }); break; case "save": updateFields(e, a), toggleRow(e), $(target + ' tr[data-id="' + e + '"] td input[data-field="enabled"]').prop({ disabled: !0 }); break; case "cancel": updateFields(e, a), toggleRow(e), $(target + ' tr[data-id="' + e + '"] td input[data-field="enabled"]').prop({ disabled: !0 }) } } function initializeButtons() { $("button[data-edit]").on("click", function (e) { e.preventDefault(); var t = $(this).data("edit"); customFields.mode["row" + t] = "edit", changeMode(t, $(this), "edit") }), $("button[data-cancel]").on("click", function (e) { e.preventDefault(); var t = $(this).data("cancel"); customFields.mode["row" + t] = "cancel", changeMode(t, $(this), "cancel") }), $("button[data-save]").on("click", function (e) { e.preventDefault(); var t = $(this).data("save"); customFields.mode["row" + t] = "save", changeMode(t, $(this), "save") }) } var CURRENT_URL = window.location.href.split("#")[0], $BODY = $("body"), $MENU_TOGGLE = $("#menu_toggle"), $SIDEBAR_MENU = $("#sidebar-menu"), $SIDEBAR_FOOTER = $(".sidebar-footer"), $LEFT_COL = $(".left_col"), $RIGHT_COL = $(".right_col"), $NAV_MENU = $(".nav_menu"), $FOOTER = $("footer"); $(document).on("click", function (e) { var t = $(".side-menu li"); t === e.target || t.has(e.target).length || ($(".child_menu").slideUp("fast"), $(".side-menu li").removeClass("active")) }), $(document).ready(function () { $(".child_menu li a").click(function () { $(this).siblings("ul").toggle().closest(".child_menu>li").siblings("li").find("ul").hide() }), $(".child_menu li").click(function () { $(slideToggle).removeClass("active"), $(this).addClass("active").siblings().removeClass("active") }) }), $(document).ready(function () { $(".mainbody").click(function () { $(".child_menu").is(":visible") && $(".child_menu").slideUp() }); var e = function () { $RIGHT_COL.css("min-height", $(window).height()); var e = $BODY.height(), t = $LEFT_COL.eq(1).height() + $SIDEBAR_FOOTER.height(), a = t > e ? t : e; a -= $NAV_MENU.height() + $FOOTER.height(), $RIGHT_COL.css("min-height", a) }; $SIDEBAR_MENU.find("a").on("click", function (t) { var a = $(this).parent(); a.is(".active") ? (a.removeClass("active"), $("ul:first", a).slideUp(function () { e() })) : (a.parent().is(".child_menu") || ($SIDEBAR_MENU.find("li").removeClass("active"), $SIDEBAR_MENU.find("li ul").slideUp()), a.addClass("active"), $("ul:first", a).slideDown(function () { e() })) }), $MENU_TOGGLE.on("click", function () { $BODY.hasClass("nav-md") ? ($BODY.removeClass("nav-md").addClass("nav-sm"), $SIDEBAR_MENU.find("li").hasClass("active") && $SIDEBAR_MENU.find("li.active").addClass("active-sm").removeClass("active")) : ($BODY.removeClass("nav-sm").addClass("nav-md"), $SIDEBAR_MENU.find("li").hasClass("active-sm") && $SIDEBAR_MENU.find("li.active-sm").addClass("active").removeClass("active-sm")), e() }), $SIDEBAR_MENU.find('a[href="' + CURRENT_URL + '"]').parent("li").addClass("current-page"), $SIDEBAR_MENU.find("a").filter(function () { return this.href == CURRENT_URL }).parents("li").addClass("active"), $(window).smartresize(function () { e() }), $.fn.mCustomScrollbar && $(".menu_fixed").mCustomScrollbar({ autoHideScrollbar: !0, theme: "minimal", mouseWheel: { preventDefault: !0 } }) }), $(document).ready(function () { $(".collapse-link").on("click", function () { var e = $(this).closest(".x_panel"), t = $(this).find("i"), a = e.find(".x_content"); e.attr("style") ? a.slideToggle(200, function () { e.removeAttr("style") }) : (a.slideToggle(200), e.css("height", "auto")), t.toggleClass("fa-chevron-up fa-chevron-down") }), $(".close-link").click(function () { var e = $(this).closest(".x_panel"); e.remove() }) }), $(document).ready(function () { $('[data-toggle="tooltip"]').tooltip({ container: "body" }) }), $(".progress .progress-bar")[0] && $(".progress .progress-bar").progressbar(), $(document).ready(function () { if ($(".js-switch")[0]) { var e = Array.prototype.slice.call(document.querySelectorAll(".js-switch")); e.forEach(function (e) { new Switchery(e, { color: "#26B99A" }) }) } }), $(document).ready(function () { $("input.flat")[0] && $(document).ready(function () { $("input.flat").iCheck({ checkboxClass: "icheckbox_flat-green", radioClass: "iradio_flat-green" }) }) }), $("table input").on("ifChecked", function () { checkState = "", $(this).parent().parent().parent().addClass("selected"), countChecked() }), $("table input").on("ifUnchecked", function () { checkState = "", $(this).parent().parent().parent().removeClass("selected"), countChecked() }); var checkState = ""; $(".bulk_action input").on("ifChecked", function () { checkState = "", $(this).parent().parent().parent().addClass("selected"), countChecked() }), $(".bulk_action input").on("ifUnchecked", function () { checkState = "", $(this).parent().parent().parent().removeClass("selected"), countChecked() }), $(".bulk_action input#check-all").on("ifChecked", function () { checkState = "all", countChecked() }), $(".bulk_action input#check-all").on("ifUnchecked", function () { checkState = "none", countChecked() }), $(document).ready(function () { $(".expand").on("click", function () { $(this).next().slideToggle(200), $expand = $(this).find(">:first-child"), "+" == $expand.text() ? $expand.text("-") : $expand.text("+") }) }), "undefined" != typeof NProgress && ($(document).ready(function () { NProgress.start() }), $(window).load(function () { NProgress.done() })), function (e, t) { var a = function (e, t, a) { var i; return function () { function n() { a || e.apply(d, l), i = null } var d = this, l = arguments; i ? clearTimeout(i) : a && e.apply(d, l), i = setTimeout(n, t || 100) } }; jQuery.fn[t] = function (e) { return e ? this.bind("resize", a(e)) : this.trigger(t) } }(jQuery, "smartresize"); var target = "#data", customFields = { data: { 1: { RequestNo: "", EmployeeName: "", PickupLocation: "", DropoffLocation: "", TripType: "", RequestType: "", PaymentStatus: "", CancelDate: "" }, 2: { RequestNo: "", EmployeeName: "", PickupLocation: "", DropoffLocation: "", TripType: "", RequestType: "", PaymentStatus: "", CancelDate: "" } }, xref: { RequestNo: ["Request No"], EmployeeName: ["EmployeeName"], PickupLocation: ["Pickup Location"], DropoffLocation: ["Dropoff Location"], TripType: ["Trip Type"], RequestType: ["Request Type"], PaymentStatus: ["Payment Status"], CancelDate: ["Cancel Date"] }, TripTypes: [[" ", " "], ["1", "1"], ["2", "2"]], RequestTypes: [[" ", " "], ["1", "1"], ["2", "2"]], mode: { row1: "view", row2: "view" }, multiedit: !1, admin: !0 }; $(document).ready(function () { buildTable(target) }), $(document).ready(function () { $(".custom-add-profile").click(function () { $(".cusrom-profile-form").slideToggle("3000") }) }), $(document).ready(function () { $(".btn-select").each(function (e) { var t = $(this).find("ul li.selected").html(); void 0 != t && ($(this).find(".btn-select-input").val(t), $(this).find(".btn-select-value").html(t)) }) }), $(document).on("click", ".btn-select", function (e) { e.preventDefault(); var t = $(this).find("ul"); if ($(this).hasClass("active")) { if (t.find("li").is(e.target)) { var a = $(e.target); a.addClass("selected").siblings().removeClass("selected"); var i = a.html(); $(this).find(".btn-select-input").val(i), $(this).find(".btn-select-value").html(i) } t.hide(), $(this).removeClass("active") } else $(".btn-select").not(this).each(function () { $(this).removeClass("active").find("ul").hide() }), t.slideDown(300), $(this).addClass("active") }), $(document).on("click", function (e) { var t = $(e.target).closest(".btn-select"); t.length || $(".btn-select").removeClass("active").find("ul").hide() });